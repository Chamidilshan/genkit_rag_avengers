import * as _genkit_ai_ai_retriever from '@genkit-ai/ai/retriever';
import { z, Genkit } from 'genkit';
import { EmbedderArgument } from 'genkit/embedder';
import { GenkitPlugin } from 'genkit/plugin';

interface Params<EmbedderCustomOptions extends z.ZodTypeAny> {
    indexName: string;
    embedder: EmbedderArgument<EmbedderCustomOptions>;
    embedderOptions?: z.infer<EmbedderCustomOptions>;
}
/**
 * Local file-based vectorstore plugin that provides retriever and indexer.
 *
 * NOT INTENDED FOR USE IN PRODUCTION
 */
declare function devLocalVectorstore<EmbedderCustomOptions extends z.ZodTypeAny>(params: Params<EmbedderCustomOptions>[]): GenkitPlugin;

/**
 * Local file-based vectorstore retriever reference
 */
declare function devLocalRetrieverRef(indexName: string): _genkit_ai_ai_retriever.RetrieverReference<z.ZodOptional<z.ZodObject<{
    k: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    k?: number | undefined;
}, {
    k?: number | undefined;
}>>>;
/**
 * Local file-based indexer reference
 */
declare function devLocalIndexerRef(indexName: string): _genkit_ai_ai_retriever.IndexerReference<z.ZodOptional<z.ZodNull>>;
/**
 * Configures a local vectorstore retriever
 */
declare function configureDevLocalRetriever<EmbedderCustomOptions extends z.ZodTypeAny>(ai: Genkit, params: {
    indexName: string;
    embedder: EmbedderArgument<EmbedderCustomOptions>;
    embedderOptions?: z.infer<EmbedderCustomOptions>;
}): _genkit_ai_ai_retriever.RetrieverAction<z.ZodObject<{
    k: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    k?: number | undefined;
}, {
    k?: number | undefined;
}>>;
/**
 * Configures a local vectorstore indexer.
 */
declare function configureDevLocalIndexer<EmbedderCustomOptions extends z.ZodTypeAny>(ai: Genkit, params: {
    indexName: string;
    embedder: EmbedderArgument<EmbedderCustomOptions>;
    embedderOptions?: z.infer<EmbedderCustomOptions>;
}): _genkit_ai_ai_retriever.IndexerAction<z.ZodTypeAny>;

export { configureDevLocalIndexer, configureDevLocalRetriever, devLocalVectorstore as default, devLocalIndexerRef, devLocalRetrieverRef, devLocalVectorstore };
